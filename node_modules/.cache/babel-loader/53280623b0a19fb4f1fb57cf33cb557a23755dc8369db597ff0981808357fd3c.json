{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xxelt\\\\OneDrive\\\\Documentos\\\\PROYECTOS_PERSONALES\\\\REACT\\\\4.-ReactUdemy\\\\src\\\\components\\\\Users\\\\AddUsers.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card.js\";\nimport classes from \"./AddUser.module.css\";\nimport Button from \"../UI/Button.js\";\nimport ErrorMessage from \"../UI/ErrorMessage.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddUser(props) {\n  _s();\n  const initialFormValues = {\n    username: '',\n    age: ''\n  };\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [error, setError] = useState();\n  function handleInputChange(event) {\n    setFormValues({\n      ...formValues,\n      //We use spread operator because we want to OVERWRITE (update) an specific value (or more) in the object. If we wouldn't use the spread operator, we would be getting new values in the object. This is also used to mantain the whole object with their other values, but with old old utdated. If we se this, then we'll get a new object with the only change made, and the rest of the object will disappear.\n      [event.target.name]: event.target.value\n    });\n  }\n  function addUserHandler(event) {\n    event.preventDefault();\n    if (formValues.username.trim().length === 0 || formValues.age.trim().length === 0) {\n      setError({\n        title: \"Invalid input!\",\n        message: \"Please enter a valid name (non-empty values).\"\n      });\n      return;\n    }\n    if (+formValues.age < 1) {\n      setError({\n        title: \"Invalid input!\",\n        message: \"Please enter a valid age (> 0).\"\n      });\n      return;\n    }\n    props.onAddUser(formValues.username, formValues.age);\n    setFormValues(initialFormValues);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      title: error.title,\n      message: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          value: formValues.username,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"age\",\n          name: \"age\",\n          value: formValues.age,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(AddUser, \"Uy0BwekZpY/ybMoYsFUQTzQaW00=\");\n_c = AddUser;\nexport default AddUser;\nvar _c;\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["React","useState","Card","classes","Button","ErrorMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","AddUser","props","_s","initialFormValues","username","age","formValues","setFormValues","error","setError","handleInputChange","event","target","name","value","addUserHandler","preventDefault","trim","length","title","message","onAddUser","children","fileName","_jsxFileName","lineNumber","columnNumber","className","input","onSubmit","htmlFor","type","id","onChange","_c","$RefreshReg$"],"sources":["C:/Users/xxelt/OneDrive/Documentos/PROYECTOS_PERSONALES/REACT/4.-ReactUdemy/src/components/Users/AddUsers.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport Card from \"../UI/Card.js\";\r\nimport classes from \"./AddUser.module.css\"\r\nimport Button from \"../UI/Button.js\";\r\nimport ErrorMessage from \"../UI/ErrorMessage.js\";\r\n\r\nfunction AddUser(props) {\r\n    \r\n    const initialFormValues = {\r\n        username: '',\r\n        age: '',\r\n    }\r\n    const [formValues, setFormValues] = useState(initialFormValues);\r\n    const [error, setError] = useState();\r\n    \r\n    function handleInputChange(event){\r\n        setFormValues({\r\n            ...formValues, //We use spread operator because we want to OVERWRITE (update) an specific value (or more) in the object. If we wouldn't use the spread operator, we would be getting new values in the object. This is also used to mantain the whole object with their other values, but with old old utdated. If we se this, then we'll get a new object with the only change made, and the rest of the object will disappear.\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    function addUserHandler(event){\r\n        event.preventDefault();\r\n        if(formValues.username.trim().length === 0 || formValues.age.trim().length === 0){\r\n            setError({\r\n                title: \"Invalid input!\",\r\n                message: \"Please enter a valid name (non-empty values).\"\r\n            })\r\n            return;\r\n        }\r\n\r\n        if(+formValues.age < 1){\r\n            setError({\r\n                title: \"Invalid input!\",\r\n                message: \"Please enter a valid age (> 0).\"\r\n            })\r\n            return;\r\n        }\r\n\r\n        props.onAddUser(formValues.username, formValues.age);\r\n        setFormValues(initialFormValues);\r\n    }\r\n\r\n    return <>\r\n    {error && <ErrorMessage title={error.title} message={error.message} />}\r\n        <Card className={classes.input}>\r\n            {/* This form should be output inside of the card, and the card component should output what's passed between the opening and closing tags off card.  */}\r\n            <form onSubmit={addUserHandler}>\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input type=\"text\" id=\"username\" name=\"username\" value={formValues.username} onChange={handleInputChange}/>\r\n                <label htmlFor=\"age\">Age</label>\r\n                <input type=\"number\" id=\"age\" name=\"age\" value={formValues.age} onChange={handleInputChange}/>\r\n                <Button type=\"submit\">Add user</Button>\r\n            </form>\r\n        </Card>\r\n    </>\r\n}\r\n\r\nexport default AddUser;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}